<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>dev-web-with-me</title>
    <link href="http://devwebwithme.tk/feed.xml" rel="self" />
    <link href="http://devwebwithme.tk" />
    <updated>2017-10-05T21:18:03+07:00</updated>
    <author>
        <name>@dp0613</name>
    </author>
    <id>http://devwebwithme.tk</id>

    <entry>
        <title>Kết nối liên tục - persistent connection trong MySQL</title>
        <author>
            <name>@dp0613</name>
        </author>
        <link href="http://devwebwithme.tk/persistence-connection-mysql-1507210971/"/>
        <id>http://devwebwithme.tk/persistence-connection-mysql-1507210971/</id>
            <category term="Kinh nghiệm"/>

        <updated>2017-10-05T20:43:00+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <img src="http://devwebwithme.tk/media/posts/6/system-2660914_1280.jpg" alt="" />
                <p>Đ&acirc;y l&agrave; vấn đề được đề cập đến ở một c&acirc;u hỏi của <a href="https://stackoverflow.com/questions/50303/persistent-db-connections-yea-or-nay" target="_blank" rel="noopener noreferrer">StackOverFlow.com</a>. T&ocirc;i muốn tr&igrave;nh b&agrave;y th&ecirc;m một v&agrave;i quan điểm của m&igrave;nh trong việc sử dụng loại "Kết nối li&ecirc;n tục - persistent connection" trong MySQL.</p>
<h4>Định nghĩa</h4>
<p>Kết nối li&ecirc;n tục đ&uacute;ng như t&ecirc;n gọi của n&oacute;, được giữ diễn ra li&ecirc;n tục, n&oacute; kh&ocirc;ng bị ngắt khi chuỗi truy vấn được thực thi xong. Trước khi thực hiện 1 kết nối li&ecirc;n tục đến m&aacute;y chủ, PHP sẽ kiểm tra xem c&oacute; tồn tại kết nối n&agrave;o được tạo trước đ&oacute; kh&ocirc;ng. Nếu c&oacute; PHP sẽ sử dụng kết nối đ&atilde; tạo đ&oacute;, nếu kh&ocirc;ng th&igrave; mới tiến h&agrave;nh tạo 1 kết nối mới.</p>
<h4>Viết code để mở kết nối li&ecirc;n tục</h4>
<pre><code class="language-php">
&lt;?php 
	//Kết nối th&ocirc;ng qua mysqli
	$conn = mysqli_query('p:localhost', 'root', '', 'my_db_name');
	
	//Kết nối th&ocirc;ng qua PDO
	$conn = new PDO("mysql:host=localhost;dbname=test_ducky", 'root', '', [PDO::ATTR_PERSISTENT =&gt; TRUE]);
?&gt;
</code></pre>
<p>Khi sử dụng <code>mysqli</code>, để mở một kết nối li&ecirc;n tục bạn chỉ cần th&ecirc;m chuỗi <code>p:</code> v&agrave;o đầu <code>hostname</code> l&agrave; được. Với <code>PDO</code> th&igrave; bạn phải set thuộc t&iacute;nh <code>ATTR_PERSISTENT = TRUE</code>.</p>
<h4>Kết nối li&ecirc;n tục gi&uacute;p tăng tốc độ của ứng dụng l&ecirc;n nhiều lần</h4>
<p>Dưới đ&acirc;y l&agrave; đoạn code d&ugrave;ng để so s&aacute;nh tốc độ xử l&yacute; của 2 loại kết nối.</p>
<pre><code class="language-php">
&lt;?php 
	//Biến đo thời gian
	$nonPersistentTime = 0;
	$persistentTime = 0;
	
	
	//Thử kết nối NON-PERSISTENT
	$before = microtime(TRUE);
	for($i = 0; $i &lt; 1000; $i++)
	{
		$conn = mysqli_connect('localhost', 'root', '', 'lab');
		mysqli_set_charset($conn, 'utf8');
		$result = mysqli_query($conn, "SELECT 1;", MYSQLI_USE_RESULT);
		while($row = mysqli_fetch_assoc($result))
		{
			//Kh&ocirc;ng l&agrave;m g&igrave; cả
		}
		mysqli_close($conn);
	}
	$after = microtime(TRUE);
	
	$nonPersistentTime = $after - $before;
	
	//Thử kết nối PERSISTENT
	$before = microtime(TRUE);
	for($i = 0; $i &lt; 1000; $i++)
	{
		$conn = mysqli_connect('p:localhost', 'root', '', 'lab');
		mysqli_set_charset($conn, 'utf8');
		$result = mysqli_query($conn, "SELECT 1;", MYSQLI_USE_RESULT);
		while($row = mysqli_fetch_assoc($result))
		{
			//Kh&ocirc;ng l&agrave;m g&igrave; cả
		}
		mysqli_close($conn);
	}
	$after = microtime(TRUE);
	
	$persistentTime = $after - $before;
	
	//T&iacute;nh to&aacute;n tốc độ ch&ecirc;nh lệch
	$diff = round($nonPersistentTime / $persistentTime, 0);
	
	echo 'Kết nối thường: ', $nonPersistentTime, 'ms. &lt;br /&gt; Kết nối li&ecirc;n tục: ', $persistentTime, 'ms. &lt;br /&gt; Kết nối li&ecirc;n tục nhanh hơn: &lt;b&gt;', $diff, '&lt;/b&gt; lần so với với kết nối thường!';
?&gt;
</code></pre>
<p>&nbsp;V&agrave; đ&acirc;y l&agrave; video ghi lại l&uacute;c chạy thử đoạn code:</p>
<p><iframe width="560" height="315" src="https://www.youtube.com/embed/rcw1HNFVuMY" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<p>Kết nối li&ecirc;n tục gi&uacute;p cho tốc độ xử l&yacute; của ứng dụng tăng l&ecirc;n từ 10 lần.&nbsp;</p>
<p>C&oacute; rất nhiều b&agrave;i viết tr&ecirc;n mạng ph&acirc;n t&iacute;ch về việc sử dụng kết nối li&ecirc;n tục l&agrave; điều xấu, v&agrave; kh&ocirc;ng n&ecirc;n lạm dụng, c&aacute;c bạn c&oacute; thể xem th&ecirc;m ở những link sau:</p>
<p><a href="https://meta.wikimedia.org/wiki/Why_persistent_connections_are_bad">https://meta.wikimedia.org/wiki/Why_persistent_connections_are_bad</a></p>
<p><a href="https://www.percona.com/blog/2006/11/12/are-php-persistent-connections-evil/">https://www.percona.com/blog/2006/11/12/are-php-persistent-connections-evil/</a></p>
<h3>Khi n&agrave;o n&ecirc;n d&ugrave;ng kết nối li&ecirc;n tục</h3>
<p>Thật ra th&igrave; mỗi một chức năng của PHP đều c&oacute; c&ocirc;ng năng ri&ecirc;ng của n&oacute;, kh&ocirc;ng c&oacute; c&aacute;i n&agrave;o l&agrave; ho&agrave;n to&agrave;n xấu cả. Vấn đề nằm ở chỗ lập tr&igrave;nh vi&ecirc;n d&ugrave;ng c&oacute; đ&uacute;ng chỗ, đ&uacute;ng l&uacute;c hay kh&ocirc;ng m&agrave; th&ocirc;i.</p>
<p>Đối với kết nối li&ecirc;n tục, t&ocirc;i xin đưa ra 1 số &yacute; kiến ri&ecirc;ng của m&igrave;nh hi vọng c&aacute;c bạn để lại &yacute; kiến nh&eacute;.</p>
<p><strong>N&Ecirc;N D&Ugrave;NG khi:</strong></p>
<ul>
<li><strong>Ứng dụng của bạn rất thường xuy&ecirc;n gửi request tới m&aacute;y chủ dữ liệu:</strong> web game, ứng dụng thời gian thực...</li>
<li><strong>Bạn sử dụng API để truy xuất dữ liệu từ một m&aacute;y chủ kh&aacute;c:</strong> Bạn n&ecirc;n d&ugrave;ng kết nối li&ecirc;n tục khi thiết kế API loại n&agrave;y.</li>
<li><strong>Chỉ c&oacute; 1 v&agrave;i ứng dụng / người d&ugrave;ng truy cập v&agrave;o m&aacute;y chủ dữ liệu của bạn:&nbsp;</strong>Đối với những website loại nhỏ, vừa, kh&ocirc;ng c&oacute; API mở.</li>
</ul>
<p><strong>KH&Ocirc;NG D&Ugrave;NG khi:</strong></p>
<ul>
<li><strong>Ứng dụng của bạn rất &iacute;t khi gửi request tới m&aacute;y chủ dữ liệu:</strong> V&iacute; dụ như blog, diễn đ&agrave;n, web tin tức...</li>
<li><strong>Bạn c&oacute; nhiều người d&ugrave;ng c&ugrave;ng truy cập chung 1 m&aacute;y chủ dữ liệu:</strong> Chẳng hạn như s&agrave;n thương mại điện tử, shared host, ...</li>
<li><strong>Khi bạn sử dụng Apache ở chế độ Prefork:</strong> Chế độ prefork sử dụng ri&ecirc;ng một kết nối cho một tiến tr&igrave;nh con. Cho n&ecirc;n số lượng kết nối sẽ đột ngột tăng l&ecirc;n rất nhanh khiến cho m&aacute;y chủ qu&aacute; tải.</li>
<li><strong>Hơn nữa, MySQL chỉ cho ph&eacute;p tối đa 1000 kết nối song song</strong>. Cho n&ecirc;n bạn phải ch&uacute; &yacute; t&iacute;nh to&aacute;n số lượng kết nối nếu kh&ocirc;ng muốn m&aacute;y chủ bị qu&aacute; tải.</li>
</ul>
<h4>Kết luận</h4>
<p>B&agrave;i viết n&agrave;y tui đ&atilde; cố gắng tham khảo từ nhiều nguồn v&agrave; tổng hợp lại, ph&acirc;n t&iacute;ch r&otilde; hơn để c&aacute;c bạn c&oacute; thể nắm vững trong 5 - 7 ph&uacute;t đọc b&agrave;i. Hi vọng nhận được &yacute; kiến phản hồi từ c&aacute;c bạn.</p>
<p>&nbsp;</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>switch case và if else: Liệu bạn có đang dùng búa để đóng tua vít?</title>
        <author>
            <name>@dp0613</name>
        </author>
        <link href="http://devwebwithme.tk/switch-va-if-else-if-lieu-ban-co-dang-dung-bua-dong-tua-vit-1506942139/"/>
        <id>http://devwebwithme.tk/switch-va-if-else-if-lieu-ban-co-dang-dung-bua-dong-tua-vit-1506942139/</id>
            <category term="Kinh nghiệm"/>

        <updated>2017-10-05T20:47:50+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <img src="http://devwebwithme.tk/media/posts/5/confused-880735_1280.jpg" alt="" />
                <p>L&agrave; một lập tr&igrave;nh vi&ecirc;n PHP th&igrave; tui c&oacute; niềm tin rằng bạn biết đến cấu tr&uacute;c <code>switch...case</code> v&agrave; <code>if... else</code>.</p>
<p>Trong b&agrave;i viết n&agrave;y tui sẽ cố gắng ph&acirc;n t&iacute;ch xem khi n&agrave;o th&igrave; ch&uacute;ng ta d&ugrave;ng <code>switch...case</code>, khi n&agrave;o th&igrave; d&ugrave;ng <code>if... else</code>.</p>
<p>Trước ti&ecirc;n, dưới đ&acirc;y l&agrave; đoạn code tui lấy từ blog <a href="http://fluffycat.com" target="_blank" rel="noopener noreferrer">FluffyCat.com</a>, đoạn code n&agrave;y sẽ thử xem trong 100.000 lần lặp th&igrave; liệu <code>switch...case</code> hay <code>if...else&nbsp;</code>nhanh hơn...</p>
<pre><code class="language-php">
&lt;?php
	//copyright Lawrence Truett and FluffyCat.com 2009, all rights reserved
  	define('BR', '&lt;'.'BR'.'&gt;');
	echo 'Performance Testing PHP if / else VS switch with 100,000 iterations'.BR.BR;
	
	$ifTime = 0;
	$switchTime = 0;
	for ($x = 0; $x &lt; 100000; $x++) {
		$oneToFive = rand(1,5);
		if (0 == fmod($x,2)) {
			$switchTime = $switchTime + testSwitch($oneToFive);
			$ifTime = $ifTime + testIf($oneToFive);
		} else {
			$ifTime = $ifTime + testIf($oneToFive);  			
			$switchTime = $switchTime + testSwitch($oneToFive);  		
		}
	}
	echo 'total if / else time: '.$ifTime.BR;
	echo 'total case time: '.$switchTime.BR;
	echo BR;
	if ($ifTime &gt; $switchTime) {
		echo 'switch is quicker by '.($ifTime - $switchTime).BR;
	} else {
		echo 'if / else is quicker by '.($switchTime - $ifTime).BR;		
	}

	function testSwitch($oneToFive) {
		$time_start = microtime(true);
		switch($oneToFive) {
			case 1: $z = 1; break;
			case 2: $z = 2; break;
			case 3: $z = 3; break;
			case 4: $z = 4; break;
			case 5: $z = 5; break;						
		}
		$time_end = microtime(true);
		$time = $time_end - $time_start;
		return $time;
	}
  
	function testIf($oneToFive) {
		$time_start = microtime(true);
		if (1 == $oneToFive) {
			$z = 1;
		} elseif(2 == $oneToFive) {
			$z = 2;			
		} elseif(3 == $oneToFive) {
			$z = 3;	
		} elseif(4 == $oneToFive) {
			$z = 4;	
		} elseif(5 == $oneToFive) {
			$z = 5;	
		}
		$time_end = microtime(true);
		$time = $time_end - $time_start;
		return $time;
	}
?&gt;
</code></pre>
<blockquote>tui đ&atilde; chạy thử v&agrave;i lần v&agrave; kết quả l&agrave; <code>if...else</code> nhanh hơn.</blockquote>
<h4>Tới đ&acirc;y ta kết luận được điều g&igrave;?</h4>
<p>Nếu cấu tr&uacute;c <code>if</code> nhanh hơn th&igrave; PHP lại c&oacute; th&ecirc;m <code>switch</code> để l&agrave;m g&igrave;? Viết code kh&ocirc;ng phải chỉ nh&igrave;n ở tốc độ thực thi, n&oacute; c&ograve;n phụ thuộc v&agrave;o độ sạch v&agrave; dễ hiểu của code. Nếu bạn d&ugrave;ng <code>if</code> v&igrave; nghĩ n&oacute; nhanh th&igrave; đ&ocirc;i l&uacute;c "người đến sau" sẽ bị "thất đi&ecirc;n b&aacute;t đảo", ng&agrave;y đ&ecirc;m mất ngủ v&igrave; bạn (&agrave; nhầm, v&igrave; đống hỗn loạn bạn để lại).</p>
<p>Ch&uacute;ng ta sẽ c&ugrave;ng nhau đi x&eacute;t những v&iacute; dụ v&agrave; r&uacute;t ra kết luận xem khi n&agrave;o d&ugrave;ng <code>switch</code> v&agrave; khi n&agrave;o d&ugrave;ng <code>if</code> nh&eacute;.</p>
<p><strong><em>V&iacute; dụ 1: Sử dụng<code> if</code> hay <code>switch</code> khi c&oacute; từ 2 trường hợp trở l&ecirc;n?</em></strong></p>
<pre><code class="language-php">
&lt;?php 
	switch($a)
	{
		case 1:
			//trường hợp 1
			break;
		case 2:
			//trường hợp 2
			break;
		case 3:
			//trường hợp 3
			break;
		case 4:
			//trường hợp 4
			break;
		default:
			//mặc định
			break;
	}
	
	if($a === 1)
	{
		//trường hợp 1
	} else if($a === 2)
	{
		//trường hợp 2
	} else if($a === 3)
	{
		//trường hợp 3
	} else if($a === 4)
	{
		//trường hợp 4
	} else
	{
		//mặc định
	}
?&gt;
</code></pre>
<p>Bạn thấy g&igrave; chưa? Vẫn c&ograve;n chưa thấy &agrave;? Khi d&ugrave;ng <code>switch</code> th&igrave; calo của bạn sẽ đỡ tốn hơn đấy, c&ograve;n khi d&ugrave;ng <code>if</code> v&agrave; rồi <code>elseif</code> v&agrave; <code>elseif</code> một lần nữa... &ocirc;i! l&uacute;c đ&oacute; tui đảm bảo n&atilde;o của bạn sẽ n&oacute;ng l&ecirc;n. C&oacute; 1 b&iacute; mật của tui m&agrave; rất nhục khi người kh&aacute;c biết l&agrave; tui lu&ocirc;n viết <code>else</code> th&agrave;nh <code>esle</code>, v&agrave; n&atilde;y giờ khi viết b&agrave;i n&agrave;y tui đ&atilde; sửa n&oacute; được mấy lần rồi đ&oacute; :fire: .</p>
<blockquote><strong>Kết luận:</strong> D&ugrave;ng <code>switch</code> khi c&oacute; từ 2 trường hợp trở l&ecirc;n.</blockquote>
<p><em><strong>V&iacute; dụ 2: Khi so s&aacute;nh với gi&aacute; trị trả về từ 1 h&agrave;m n&agrave;o đ&oacute;</strong></em></p>
<pre><code class="language-php">
&lt;?php 
	switch(myFunc())
	{
		case 1:
			//trường hợp 1
			break;
		case 2:
			//trường hợp 2
			break;
		default:
			//mặc định
			break;
	}
	
	if(myFunc() === 1)
	{
		//trường hợp 1
	} else if(myFunc() === 2)
	{
		//trường hợp 2
	} else
	{
		//mặc định
	}
?&gt;
</code></pre>
<p>Nếu so s&aacute;nh như kiểu ở tr&ecirc;n, bạn sẽ dễ d&agrave;ng nhận ra được khi d&ugrave;ng <code>switch</code> th&igrave; h&agrave;m <code>myFunc()</code> chỉ được gọi 1 lần, c&ograve;n khi d&ugrave;ng&nbsp;<code>if</code> l&agrave; <span style="text-decoration: line-through;">mấy tỉ</span> 2 lần.</p>
<blockquote><strong>Kết luận:</strong> D&ugrave;ng <code>switch</code> khi bạn muốn so s&aacute;nh với gi&aacute; trị trả về từ 1 h&agrave;m.</blockquote>
<p><em><strong>&nbsp;V&iacute; dụ 3: Khi điều kiện qu&aacute; phức tạp</strong></em></p>
<pre><code class="language-php">
&lt;?php 
	switch(TRUE)
	{
		case 'bar':
		case 'baz':
		case 'bat':
		case 'buz':
			//l&agrave;m g&igrave; đ&oacute;
			break;
	}
	
	if($foo == 'bar' || $foo == 'baz' || $foo == 'bat' || $foo == 'buz')
	{
		//l&agrave;m g&igrave; đ&oacute;
	}
?&gt;
</code></pre>
<p>&nbsp;Bạn thấy c&aacute;ch n&agrave;o dễ đọc hơn (tui c&oacute; niềm tin l&agrave; bạn hiểu hết cả 2 c&aacute;ch)?</p>
<p>Th&ecirc;m 1 v&iacute; dụ tương tự nh&eacute;:</p>
<pre><code class="language-php">
&lt;?php 

	switch(TRUE)
	{
		case $foo == 'baz' &amp;&amp; $baz == 'foo':
		case $foo == 'foo' &amp;&amp; $baz == 'baz':
			//l&agrave;m g&igrave; đ&oacute;
			break;
	}
	
	if(($foo == 'baz' &amp;&amp; $baz == 'foo') || ($foo == 'foo' &amp;&amp; $baz == 'baz'))
	{
		//l&agrave;m g&igrave; đ&oacute;
	}
?&gt;
</code></pre>
<blockquote><strong>Kết luận:</strong> D&ugrave;ng <code>switch</code> khi điều kiện phức tạp</blockquote>
<h4>&nbsp;Kết luận</h4>
<p>C&aacute;m ơn c&aacute;c bạn đ&atilde; đọc đến đ&acirc;y. Khi code th&igrave; đừng ch&uacute; &yacute; qu&aacute; đến hiệu năng, phải dễ đọc dễ hiểu đ&atilde;. Hi vọng những v&iacute; dụ ở tr&ecirc;n sẽ gi&uacute;p c&aacute;c bạn c&oacute; th&ecirc;m 1 c&aacute;ch nh&igrave;n mới trong nghề "code dạo".&nbsp;</p>
<p>H&atilde;y để lại &yacute; kiến hoặc gi&uacute;p tui t&igrave;m th&ecirc;m v&iacute; dụ nh&eacute;.</p>
            ]]>
        </content>
    </entry>
</feed>
