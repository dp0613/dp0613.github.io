{
    "version": "https://jsonfeed.org/version/1",
    "title": "dp0613",
    "description": "",
    "home_page_url": "http://dp0613.tk",
    "feed_url": "http://dp0613.tk/feed.json",
    "user_comment": "",
    "author": {
        "name": "dp0613"
    },
    "items": [
        {
            "id": "http://dp0613.tk/Ket-noi-lien-tuc-persistent-connection-trong-MySQL/",
            "url": "http://dp0613.tk/Ket-noi-lien-tuc-persistent-connection-trong-MySQL/",
            "title": "Kết nối liên tục - persistent connection trong MySQL",
            "summary": "Đây là vấn đề được đề cập đến ở một câu hỏi của StackOverFlow.com. Tôi muốn trình bày thêm một vài quan điểm của mình trong việc sử dụng loại&hellip;",
            "content_html": "<p>Đây là vấn đề được đề cập đến ở một câu hỏi của <a href=\"https://stackoverflow.com/questions/50303/persistent-db-connections-yea-or-nay\" target=\"_blank\" rel=\"noopener noreferrer\">StackOverFlow.com</a>. Tôi muốn trình bày thêm một vài quan điểm của mình trong việc sử dụng loại \"Kết nối liên tục - persistent connection\" trong MySQL.</p>\n<h4>Định nghĩa</h4>\n<p>Kết nối liên tục đúng như tên gọi của nó, được giữ diễn ra liên tục, nó không bị ngắt khi chuỗi truy vấn được thực thi xong. Trước khi thực hiện 1 kết nối liên tục đến máy chủ, PHP sẽ kiểm tra xem có tồn tại kết nối nào được tạo trước đó không. Nếu có PHP sẽ sử dụng kết nối đã tạo đó, nếu không thì mới tiến hành tạo 1 kết nối mới.</p>\n<h4>Viết code để mở kết nối liên tục</h4>\n<pre><code class=\"language-php\">\n&lt;?php \n\t//Kết nối thông qua mysqli\n\t$conn = mysqli_query('p:localhost', 'root', '', 'my_db_name');\n\t\n\t//Kết nối thông qua PDO\n\t$conn = new PDO(\"mysql:host=localhost;dbname=test_ducky\", 'root', '', [PDO::ATTR_PERSISTENT =&gt; TRUE]);\n?&gt;\n</code></pre>\n<p>Khi sử dụng <code>mysqli</code>, để mở một kết nối liên tục bạn chỉ cần thêm chuỗi <code>p:</code> vào đầu <code>hostname</code> là được. Với <code>PDO</code> thì bạn phải set thuộc tính <code>ATTR_PERSISTENT = TRUE</code>.</p>\n<h4>Kết nối liên tục giúp tăng tốc độ của ứng dụng lên nhiều lần</h4>\n<p>Dưới đây là đoạn code dùng để so sánh tốc độ xử lý của 2 loại kết nối.</p>\n<pre><code class=\"language-php\">\n&lt;?php \n\t//Biến đo thời gian\n\t$nonPersistentTime = 0;\n\t$persistentTime = 0;\n\t\n\t\n\t//Thử kết nối NON-PERSISTENT\n\t$before = microtime(TRUE);\n\tfor($i = 0; $i &lt; 1000; $i++)\n\t{\n\t\t$conn = mysqli_connect('localhost', 'root', '', 'lab');\n\t\tmysqli_set_charset($conn, 'utf8');\n\t\t$result = mysqli_query($conn, \"SELECT 1;\", MYSQLI_USE_RESULT);\n\t\twhile($row = mysqli_fetch_assoc($result))\n\t\t{\n\t\t\t//Không làm gì cả\n\t\t}\n\t\tmysqli_close($conn);\n\t}\n\t$after = microtime(TRUE);\n\t\n\t$nonPersistentTime = $after - $before;\n\t\n\t//Thử kết nối PERSISTENT\n\t$before = microtime(TRUE);\n\tfor($i = 0; $i &lt; 1000; $i++)\n\t{\n\t\t$conn = mysqli_connect('p:localhost', 'root', '', 'lab');\n\t\tmysqli_set_charset($conn, 'utf8');\n\t\t$result = mysqli_query($conn, \"SELECT 1;\", MYSQLI_USE_RESULT);\n\t\twhile($row = mysqli_fetch_assoc($result))\n\t\t{\n\t\t\t//Không làm gì cả\n\t\t}\n\t\tmysqli_close($conn);\n\t}\n\t$after = microtime(TRUE);\n\t\n\t$persistentTime = $after - $before;\n\t\n\t//Tính toán tốc độ chênh lệch\n\t$diff = round($nonPersistentTime / $persistentTime, 0);\n\t\n\techo 'Kết nối thường: ', $nonPersistentTime, 'ms. &lt;br /&gt; Kết nối liên tục: ', $persistentTime, 'ms. &lt;br /&gt; Kết nối liên tục nhanh hơn: &lt;b&gt;', $diff, '&lt;/b&gt; lần so với với kết nối thường!';\n?&gt;\n</code></pre>\n<p> Và đây là video ghi lại lúc chạy thử đoạn code:</p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/rcw1HNFVuMY\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p>Kết nối liên tục giúp cho tốc độ xử lý của ứng dụng tăng lên từ 10 lần. </p>\n<p>Có rất nhiều bài viết trên mạng phân tích về việc sử dụng kết nối liên tục là điều xấu, và không nên lạm dụng, các bạn có thể xem thêm ở những link sau:</p>\n<p><a href=\"https://meta.wikimedia.org/wiki/Why_persistent_connections_are_bad\">https://meta.wikimedia.org/wiki/Why_persistent_connections_are_bad</a></p>\n<p><a href=\"https://www.percona.com/blog/2006/11/12/are-php-persistent-connections-evil/\">https://www.percona.com/blog/2006/11/12/are-php-persistent-connections-evil/</a></p>\n<h3>Khi nào nên dùng kết nối liên tục</h3>\n<p>Thật ra thì mỗi một chức năng của PHP đều có công năng riêng của nó, không có cái nào là hoàn toàn xấu cả. Vấn đề nằm ở chỗ lập trình viên dùng có đúng chỗ, đúng lúc hay không mà thôi.</p>\n<p>Đối với kết nối liên tục, tôi xin đưa ra 1 số ý kiến riêng của mình hi vọng các bạn để lại ý kiến nhé.</p>\n<p><strong>NÊN DÙNG khi:</strong></p>\n<ul>\n<li><strong>Ứng dụng của bạn rất thường xuyên gửi request tới máy chủ dữ liệu:</strong> web game, ứng dụng thời gian thực...</li>\n<li><strong>Bạn sử dụng API để truy xuất dữ liệu từ một máy chủ khác:</strong> Bạn nên dùng kết nối liên tục khi thiết kế API loại này.</li>\n<li><strong>Chỉ có 1 vài ứng dụng / người dùng truy cập vào máy chủ dữ liệu của bạn: </strong>Đối với những website loại nhỏ, vừa, không có API mở.</li>\n</ul>\n<p><strong>KHÔNG DÙNG khi:</strong></p>\n<ul>\n<li><strong>Ứng dụng của bạn rất ít khi gửi request tới máy chủ dữ liệu:</strong> Ví dụ như blog, diễn đàn, web tin tức...</li>\n<li><strong>Bạn có nhiều người dùng cùng truy cập chung 1 máy chủ dữ liệu:</strong> Chẳng hạn như sàn thương mại điện tử, shared host, ...</li>\n<li><strong>Khi bạn sử dụng Apache ở chế độ Prefork:</strong> Chế độ prefork sử dụng riêng một kết nối cho một tiến trình con. Cho nên số lượng kết nối sẽ đột ngột tăng lên rất nhanh khiến cho máy chủ quá tải.</li>\n<li><strong>Hơn nữa, MySQL chỉ cho phép tối đa 1000 kết nối song song</strong>. Cho nên bạn phải chú ý tính toán số lượng kết nối nếu không muốn máy chủ bị quá tải.</li>\n</ul>\n<h4>Kết luận</h4>\n<p>Bài viết này tui đã cố gắng tham khảo từ nhiều nguồn và tổng hợp lại, phân tích rõ hơn để các bạn có thể nắm vững trong 5 - 7 phút đọc bài. Hi vọng nhận được ý kiến phản hồi từ các bạn.</p>",
            "image": "http://dp0613.tk/media/posts/6/system-2660914_1280-lg.jpg",
            "author": {
                "name": "dp0613"
            },
            "tags": [
                   "php",
                   "mysql"
            ],
            "date_published": "2018-09-09T17:11:36+07:00",
            "date_modified": "2018-09-09T17:22:09+07:00"
        },
        {
            "id": "http://dp0613.tk/Vagrant-nguoi-thay-the-hoan-hao-cho-XAMPP-va-WAMP/",
            "url": "http://dp0613.tk/Vagrant-nguoi-thay-the-hoan-hao-cho-XAMPP-va-WAMP/",
            "title": "Vagrant - người thay thế hoàn hảo cho XAMPP và WAMP",
            "summary": "Có 2 loại người:Bạn thích màu cam trẻ trung hay yêu màu hồng nữ tính? (Hình ảnh từ Google)Nếu bạn nhận ra và hiểu hình ảnh phía trên thì bạn&hellip;",
            "content_html": "<h3>Có 2 loại người:</h3>\n<figure class=\"post__image post__image--center\"><img src=\"http://devwebwithme.tk/media/posts/8/wampxampp.jpg\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"http://devwebwithme.tk/media/posts/8/responsive/wampxampp-xs.jpg 300w, http://devwebwithme.tk/media/posts/8/responsive/wampxampp-sm.jpg 480w, http://devwebwithme.tk/media/posts/8/responsive/wampxampp-md.jpg 768w\" alt=\"Bạn yêu màu cam năng động hay thích màu hồng nữ tính?\" width=\"615\" height=\"200\">\n<figcaption>Bạn thích màu cam trẻ trung hay yêu màu hồng nữ tính? (Hình ảnh từ Google)</figcaption>\n</figure>\n<p>Nếu bạn nhận ra và hiểu hình ảnh phía trên thì bạn đúng là 1 tay \"code web kiêm cài win dạo\" chuyên nghiệp.</p>\n<p>Tui có quen khá nhiều bạn cùng là dân làm web. Và ngay cả tui hồi đó cũng chỉ sử dụng Wamp hay Xampp mà thôi. Tình yêu dành cho \"khúc xương cam\" và cái \"bồ cào hồng\" vẫn luôn vẹn nguyên cho đến ngày nay, à đúng hơn là tối hôm qua. </p>\n<p>Chuyện là tối hôm qua khi đang mò cách cài nhiều phiên bản php vào 1 server để ngâm cứu thì tui vô tình bắt gặp <strong>vagrant</strong> - người tình sét đánh - mới gặp đã yêu.</p>\n<h3>Vagrant - kẻ đến sau hay người thay thế?</h3>\n<p>Wamp và Xampp dùng để làm gì và dùng như thế nào tui sẽ không đề cập tới nữa. Vì khi đã đọc tới đây nghĩa là bạn biết cả rồi.</p>\n<p>Về người đến sau vagrant, nó cũng là 1 server ảo. Tuy nhiên cái mà vagrant dành tặng cho bạn không phải chỉ là 1 server, đó là máy chủ cài hệ điều hành thật sự. Bạn có thể tự chọn hệ điều hành, dù là Linux và dòng họ của nó hay là MacOS, Windows đều được. Và sau đó bạn có thể tự do cài đặt các phần mềm cần dùng cho máy chủ này.</p>\n<p>Vagrant có thể dùng để:</p>\n<ul>\n<li>Làm máy chủ để phát triển web</li>\n<li>Làm máy chủ để học hệ điều hành, chẳng hạn mấy bạn chuyên về mạng phải học Linux</li>\n<li>Dùng để thử nghiệm và nâng cấp web: Ví dụ bạn có cái web sử dụng PHP 5, bây giờ muốn nâng cấp nó lên PHP 7 thì phải có 1 máy chủ cài được cả 2 phiên bản PHP.</li>\n</ul>\n<p><strong>Và còn nhiều cách dùng Vagrant khác, nói chung là nó có thể thay thế hoàn toàn Wamp và Xampp.</strong></p>\n<p>Đọc thêm giới thiệu về Vagrant: <a href=\"https://www.vagrantup.com/intro/index.html\">https://www.vagrantup.com/intro/index.html</a></p>\n<h3>Cài đặt</h3>\n<p>Để có thể làm việc với Vagrant, đầu tiên các bạn phải tải các phần mềm bên dưới:</p>\n<ul>\n<li><a title=\"Tải VirtualBox\" href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener noreferrer\">VirtualBox</a>: Là bộ thư viện giúp tạo lập máy ảo ngay trong hệ điều hành đang sử dụng. Bạn cần tải đúng với hệ điều hành mà bạn đang sử dụng nhé.</li>\n<li><a title=\"Tải Vagrant\" href=\"https://releases.hashicorp.com/vagrant/1.9.5/\" target=\"_blank\" rel=\"noopener noreferrer\">Vagrant</a>: Đây là người thay thế của chúng ta. Bạn chú ý nên tải phiên bản <code>1.9.5</code> nhé, phiên bản mới nhất hiện đang có 1 số lỗi. </li>\n<li><a title=\"Cmder\" href=\"http://cmder.net/\" target=\"_blank\" rel=\"noopener noreferrer\">Cmder</a>: Là 1 phần mềm thay thế cmd của hệ thống, nó dễ xài và đẹp hơn :p </li>\n</ul>\n<p>Sau khi cài đặt xong 3 phần mềm trên, bạn phải khởi động lại máy.</p>\n<h3>Khái niệm cơ bản</h3>\n<p>Trước khi có thể làm việc với Vagrant, bạn cần nắm được 1 số khái niệm cơ bản liên quan:</p>\n<p><strong>Vagrantfile</strong></p>\n<p>Đây là tên 1 tệp nằm ở ngoài cùng của thư mục chứa Vagrant. Tác dụng quan trọng nhất của nó là cho vagrant biết nó sẽ sử dụng loại máy chủ nào (hay nó đúng hơn là <code>box</code> nào). Ngoài ra nó còn chứa các thiết lập về IP và tham số bộ nhớ...</p>\n<p><strong>Box</strong></p>\n<p>Vagrant cho phép bạn cài rất nhiều hệ điều hành, và các tập tin chứa các hệ điều hành đó gọi là <code>box</code>. Mỗi box là 1 hệ điều hành (hoặc 1 thư viện cài sẵn các phần mềm liên quan). </p>\n<p>Muốn xem danh sách các <code>box</code> của vagrant thì <a href=\"https://app.vagrantup.com/boxes/search?_ga=2.126578382.2109020178.1507566131-1033133917.1507566131\" target=\"_blank\" rel=\"noopener noreferrer\">vào đây</a>.</p>\n<p>Khi bạn muốn khởi động hoặc tạo mới 1 máy chủ, bạn cần <code>add</code> box vào vagrant. Nếu <code>box</code> đã có sẵn, bạn cần phải cấu hình tên <code>box</code> ở file <code>Vagrantfile</code>. </p>\n<p>Cách làm như thế nào sẽ nói rõ ở phần bên dưới.</p>\n<p><strong>Synced Folders</strong></p>\n<p>Khái niệm này nói đến việc các tập tin nằm trong thư mục chứa tệp <code>Vagrantfile</code> được đồng bộ với máy chủ ảo luôn. Mà cụ thể là nó được đồng bộ với thư mục <code>/vagrant</code> ở máy ảo.</p>\n<h3>Tạo máy chủ mới</h3>\n<p>Đọc khái niệm thấy mơ hồ đúng không. Không sao, dưới đây, tui sẽ hướng dẫn các bạn cài đặt Vagrant trên windows, các hệ điều hành khác cũng y hệt thôi.</p>\n<p><em><strong>Bước 1: Tạo thư mục mới chứa vagrant</strong></em></p>\n<p>Tui sẽ tạo 1 thư mục mới có tên là <code>D:/vagrant</code> ở ổ đĩa D, như hình bên dưới:</p>\n<figure class=\"post__image post__image--center\"><img src=\"http://devwebwithme.tk/media/posts/8/untitled.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"http://devwebwithme.tk/media/posts/8/responsive/untitled-xs.png 300w, http://devwebwithme.tk/media/posts/8/responsive/untitled-sm.png 480w, http://devwebwithme.tk/media/posts/8/responsive/untitled-md.png 768w\" alt=\"Tạo thư mục mới chứa Vagrant\" width=\"214\" height=\"254\">\n<figcaption>Tạo thư mục mới chứa Vagrant (Đừng hỏi tên các thư mục bị che)</figcaption>\n</figure>\n<p><strong><em>Bước 2: Thêm box vào vagrant</em></strong></p>\n<p>Tôi khuyên các bạn nên sử dụng <code>box</code> <code>ubuntu/trusty64</code> hoặc <code>ubuntu/trusty32</code> nhé. Vì 2 box này sẽ hỗ trợ PHP 7 cho các bạn thoải mái sử dụng hơn. Còn không thích thì có thể lên trang xem <code>box</code> ở phần trên mà chọn.</p>\n<p>Bạn mở <strong>Cmder</strong> mới cài ở phần đầu lên nhé. Và gõ vào như sau:</p>\n<pre><code class=\"language-vim\">$ D:                                 #Vào ổ đĩa D\n\n$ cd vagrant                         #Vào thư mục vagrant\n\n$ vagrant box add ubuntu/trusty32    #Thay thế ubuntu/trusty32 tên box theo ý bạn nhé</code></pre>\n<p><em><strong>Bước 3: Khởi tạo và cấu hình <code>Vagrantfile</code></strong></em></p>\n<pre><code class=\"language-vim\">$ vagrant init          #Khởi tạo, xong sẽ có 1 tệp tên Vagrantfile nằm trong thư mục vagrant</code></pre>\n<p>Sau khi khởi tạo, chúng ta sẽ cấu hình tệp <code>Vagrantfile</code>, dưới đây sẽ là các chỗ các bạn cần sửa, làm theo cho kỹ nhé:</p>\n<pre><code class=\"language-vim\">#Thay thế bằng tên box bạn sử dụng\nconfig.vm.box = \"ubuntu/trusty32\" \n\n#Bỏ dấu # \nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080 \n\n#Bỏ dấu #, đổi thành IP 55.55.55.5 cho dễ nhớ\nconfig.vm.network \"private_network\", ip: \"55.55.55.5\" \n\n#Bỏ dấu # và sửa lại giống tui (Máy thật -&gt; máy ảo)\nconfig.vm.synced_folder \"D:\\\\vagrant\\\\\", \"/vagrant\" \n\n\n#Bỏ dấu # ở dòng đầu và chỗ chữ end. Thêm vào 3 dòng customize\n\nconfig.vm.provider \"virtualbox\" do |vb|\n\n  vb.customize [\"setextradata\", :id, \"VBoxInternal2/SharedFoldersEnableSymlinksCreate/htdocs\", \"1\"]\n\n  vb.customize [\"modifyvm\", :id, \"--nictype1\", \"Am79C973\"]\n \n  vb.customize [\"modifyvm\", :id, \"--nictype2\", \"Am79C973\"]\n end\n\n# Thêm dòng này vào cuối file (đặt trước chữ end)\nconfig.vm.boot_timeout = 600\n</code></pre>\n<p> Tệp <code>Vagrantfile</code> đầy đủ:</p>\n<pre><code class=\"language-vim\">\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# All Vagrant configuration is done below. The \"2\" in Vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). Please don't change it unless you know what\n# you're doing.\nVagrant.configure(\"2\") do |config|\n  # The most common configuration options are documented and commented below.\n  # For a complete reference, please see the online documentation at\n  # https://docs.vagrantup.com.\n\n  # Every Vagrant development environment requires a box. You can search for\n  # boxes at https://atlas.hashicorp.com/search.\n  config.vm.box = \"ubuntu/trusty32\"\n\n  # Disable automatic box update checking. If you disable this, then\n  # boxes will only be checked for updates when the user runs\n  # `vagrant box outdated`. This is not recommended.\n  # config.vm.box_check_update = false\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. In the example below,\n  # accessing \"localhost:8080\" will access port 80 on the guest machine.\n  # NOTE: This will enable public access to the opened port\n   config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine and only allow access\n  # via 127.0.0.1 to disable public access\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"\n\n  # Create a private network, which allows host-only access to the machine\n  # using a specific IP.\n   config.vm.network \"private_network\", ip: \"55.55.55.5\"\n\n  # Create a public network, which generally matched to bridged network.\n  # Bridged networks make the machine appear as another physical device on\n  # your network.\n  # config.vm.network \"public_network\"\n\n  # Share an additional folder to the guest VM. The first argument is\n  # the path on the host to the actual folder. The second argument is\n  # the path on the guest to mount the folder. And the optional third\n  # argument is a set of non-required options.\n  config.vm.synced_folder \"D:\\\\vagrant\\\\\", \"/vagrant\"\n\n  # Provider-specific configuration so you can fine-tune various\n  # backing providers for Vagrant. These expose provider-specific options.\n  # Example for VirtualBox:\n  #\n\tconfig.vm.provider \"virtualbox\" do |vb|\n\t\t# Display the VirtualBox GUI when booting the machine\n\t\t#vb.gui = true\n\n\t\t# Customize the amount of memory on the VM:\n\t\t#vb.memory = \"1024\"\n\n\t\tvb.customize [\"setextradata\", :id, \"VBoxInternal2/SharedFoldersEnableSymlinksCreate/htdocs\", \"1\"]\n\t\t\n\t\t### Change network card to PCnet-FAST III\n\t\t# For NAT adapter\n\t\tvb.customize [\"modifyvm\", :id, \"--nictype1\", \"Am79C973\"]\n\t\t\n\t\t# For host-only adapter\n\t\tvb.customize [\"modifyvm\", :id, \"--nictype2\", \"Am79C973\"]\n\tend\n  #\n  # View the documentation for the provider you are using for more\n  # information on available options.\n\n  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies\n  # such as FTP and Heroku are also available. See the documentation at\n  # https://docs.vagrantup.com/v2/push/atlas.html for more information.\n  # config.push.define \"atlas\" do |push|\n  #   push.app = \"YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME\"\n  # end\n\n  # Enable provisioning with a shell script. Additional provisioners such as\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\n  # documentation for more information about their specific syntax and use.\n  # config.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n  #   apt-get update\n  #   apt-get install -y apache2\n  # SHELL\n  \n  config.vm.boot_timeout = 600\nend\n\n</code></pre>\n<p><em><strong>Bước 4: Bật máy chủ lên</strong></em></p>\n<pre><code class=\"language-vim\">$ vagrant up #Đợi vài phút máy chủ sẽ bật lên\n\n$ vagrant ssh #Login vào máy chủ bằng SSH\n</code></pre>\n<p>Sau khi đăng nhập vào máy chủ, bạn sẽ có thể sử dụng giao diện CLI huyền thoại của Ubuntu. </p>\n<p>Tiếp theo thì sao? Thì cài đặt PHP, Apache và MySQL vào hoặc bất kỳ thứ gì các bạn cần chứ sao nữa. </p>\n<p>Tuy nhiên, bài này đến đây là khá dài rồi, làm việc với Vagrant như thế nào tui sẽ viết ở bài viết sau nhé.</p>",
            "image": "http://dp0613.tk/media/posts/5/vagrant-with-symfony2-lg.jpg",
            "author": {
                "name": "dp0613"
            },
            "tags": [
                   "Lung tung"
            ],
            "date_published": "2018-09-09T17:08:16+07:00",
            "date_modified": "2018-09-09T17:10:13+07:00"
        },
        {
            "id": "http://dp0613.tk/Gui-Lien-Minh/",
            "url": "http://dp0613.tk/Gui-Lien-Minh/",
            "title": "Gửi Liên Minh",
            "summary": "Gửi con trai của ba... Hôm nay là thứ 6 ngày 13 tháng 10 năm 2017, cuối cùng thì dp0613 (ba của con đó) cũng đã trở thành cha. Con&hellip;",
            "content_html": "Gửi con trai của ba...<br><br>Hôm nay là thứ 6 ngày 13 tháng 10 năm 2017, cuối cùng thì dp0613 (ba của con đó) cũng đã trở thành cha. Con biết gì không, ba lấy biệt danh là dp0613 vì 24 năm cuộc đời ba lúc nào cũng xui xẻo, ngày nào cũng là thứ 6 ngày 13 cả.<br><br>Nhưng mà hôm nay, cũng thứ 6 ngày 13 - ngày may mắn và hạnh phúc nhất trong suốt 24 năm nay.<br><br>Ba không nói hôm nay là ngày hạnh phúc nhất đời ba, vì ba biết, khi có con bên cạnh ba mẹ, mỗi ngày trôi qua đều sẽ là ngày hạnh phúc.<br><br>Ai rồi cũng tìm thấy hạnh phúc cho riêng mình phải không con! Sau bao nhiêu năm kiếm tìm, ba đã tìm thấy trán nhỏ (là mẹ con đó) rồi chính người phụ nữ tuyệt vời ấy đã cho ba một thiên chức: Làm cha!<br><br>Ba mẹ hi vọng, Mon của ba sẽ là một người đàn ông chính trực, yêu thương mọi người. Ba mẹ không mong sau này con giàu có về tiền bạc, mà hãy giàu có về tình yêu thương con nhé. Vì con biết không, chính tình yêu thương đã cho ba gặp mẹ con, và cũng chính nhờ nó mà con được sinh ra, được sống, được yêu thương.<br><br>Mon hãy sống giản dị và bình yên. Từ khi mang thai Mon, mẹ trán nhỏ chưa từng bị hành như bao bà bầu khác, đến khi sắp sinh cũng chỉ hơi nặng bụng. Ba luôn có linh cảm con là đứa con tốt, thương ba mẹ rất nhiều !<br><br>Và nếu, một ngày nào đó, Mon đọc được những dòng này, thì con hãy nhớ, ba mẹ vẫn mãi yêu thương Mon...<br><br>Ba mẹ yêu con - Trần Tô Liên Minh (Mon)!!<br><br>Ba của con.",
            "image": "http://dp0613.tk/media/posts/4/happy-doraemon-desktop-background-lg.jpg",
            "author": {
                "name": "dp0613"
            },
            "tags": [
                   "Lung tung"
            ],
            "date_published": "2018-09-09T17:06:20+07:00",
            "date_modified": "2018-09-09T17:06:20+07:00"
        },
        {
            "id": "http://dp0613.tk/giu-lai-code-cu-tinh-yeu-hay-dai-kho/",
            "url": "http://dp0613.tk/giu-lai-code-cu-tinh-yeu-hay-dai-kho/",
            "title": "Giữ lại code cũ - tình yêu hay dại khờ?",
            "summary": "Chuyện ba ngày mưaMấy ngày nay tui bị sa vào chiến trường NodeJS và AngularJS... Chẳng là đang tham gia vào một dự án outsource cho 1 công ty của&hellip;",
            "content_html": "<h3>Chuyện ba ngày mưa</h3>\n<p>Mấy ngày nay tui bị sa vào chiến trường NodeJS và AngularJS... Chẳng là đang tham gia vào một dự án outsource cho 1 công ty của nước ngoài (hình như là Mỹ).</p>\n<p>Công việc là làm lại hệ thống sẵn có của họ, hay nói thẳng ra là \"tạo ra bug mới trên bug cũ...\", hệ thống dùng AngularJS, SASS, Jade để làm frontend. NodeJS, Laravel và Postgres để xử lý API (nghe thôi  là muốn <span style=\"text-decoration: line-through;\">tuột quần</span> té xỉu).</p>\n<h3>Khi nào?</h3>\n<p>Việc giữ lại code cũ là việc thường xuyên xảy ra ở những công ty startup. Các ngài ấy luôn phải đưa ra quyết định, đặc biệt là vào những lúc sau:</p>\n<ul>\n<li>Sản phẩm v1.0 bị failed</li>\n<li>Hệ thống không đáp ứng được lượng người dùng ngày càng tăng (tin vui hay buồn?)</li>\n<li>Nhân sự gốc ra đi, để lại 1 hệ thống không có document.</li>\n<li>Hay đơn giản là hệ thống cũ vẫn okie, chỉ có điều code ngu quá nên khó maintain.</li>\n</ul>\n<h3>Và tại sao?</h3>\n<p>Ai làm startup rồi cũng sẽ gặp ít nhất là 1 hoàn cảnh giống như tui viết ở trên. Lý do mà startup hay quyết định giữ lại code cũ thay vì làm mới là vì:</p>\n<ul>\n<li><strong>Chi phí:</strong> Nếu làm lại mới, sẽ tốn rất nhiều tiền cho các công ty outsource hoặc cho nhân lực.</li>\n<li><strong>Thời gian:</strong> Mất nhiều thời gian để tạo ra 1 hệ thống đẹp (làm lại mà làm xấu thì giữ cái cũ cho rồi)</li>\n<li><strong>Nhân lực:</strong> Hạn chế về trình độ (startup thường là dồi dào ý tưởng, chứ chưa đủ kỹ năng và trình độ). Và hay gặp nhất là không đủ người: vừa quản trị cái cũ vừa phát triển cái mới.</li>\n<li>Do có tình cảm sâu nặng với hệ thống cũ (thật đó không đùa đâu)</li>\n<li>Và hàng tỷ lý do khác tùy theo cảm xúc cá nhân của ngài ấy (500 sắc thái)</li>\n</ul>\n<p>Cho nên là <strong>giữ lại cái cũ</strong>...</p>\n<h3>Tình yêu hay dại khờ?</h3>\n<p>Thật ra mà nói, khi yêu là đã dại khờ... à nhầm, đang viết về startup...</p>\n<p>Tui không phân tích việc giữ lại hệ thống cũ là đúng hay sai. Thay vào đó tui sẽ chỉ ra 1 vài hướng khác vẹn cả đôi đường. Để làm được điều đó, các bạn phải tạo ra một hệ thống hoàn toàn mới, và hệ thống mới này sẽ được lắp ghép từ những module.</p>\n<p>Module của hệ thống mới được xác định dựa vào hệ thống cũ. Module đăng ký - đăng nhập là 1 ví dụ. Bạn sẽ tạo ra UI mới cho module này, sau đó viết 1 API giúp hệ thống mới dùng database cũ. Và thậm chí có thể viết thêm API dùng riêng cho database mới.</p>\n<p>Như vậy các bạn thấy mấu chốt ở đây chính là API và cách nâng cấp từng module. Hệ thống cũ vẫn duy trì hoạt động, và sẽ được nâng cấp từng ngày qua từng module. Cách làm này sẽ hạn chế tối đa các vấn đề về thời gian, nhân lực và chi phí. </p>\n<h3>Bài viết này có giúp tui tìm được việc làm?</h3>\n<p>Phạm vi của bài viết là nói khá chung chung về 1 vấn đề mà startup hay gặp, còn chuyện bạn tìm được việc làm hay không thì hãy để lại feedback bên dưới cho tui biết nhé. </p>\n<p>Bạn có nghĩ việc chia module là hợp lý?</p>",
            "image": "http://dp0613.tk/media/posts/3/0a23b0fe314f82e9d8760c95104ddffe331551ef-lg.jpg",
            "author": {
                "name": "dp0613"
            },
            "tags": [
                   "performance",
                   "Lung tung"
            ],
            "date_published": "2018-09-09T17:05:06+07:00",
            "date_modified": "2018-09-12T21:21:24+07:00"
        },
        {
            "id": "http://dp0613.tk/Ke-luoi-hay-anh-hung/",
            "url": "http://dp0613.tk/Ke-luoi-hay-anh-hung/",
            "title": "Kẻ lười hay anh hùng?",
            "summary": "Có một loại người, khi chạy dự án cho khách thường rất lười, chỉ cần chạy được là được. Tui là một ví dụ, nhớ hồi năm 2016, tui có&hellip;",
            "content_html": "<p class=\"dropcap\">Có một loại người, khi chạy dự án cho khách thường rất lười, chỉ cần chạy được là được. Tui là một ví dụ, nhớ hồi năm 2016, tui có tham gia 1 dự án làm website bán hàng cho công ty \"Mars Group\", website đó hiện nay vẫn còn sử dụng và lượng khách hàng rất ổn định: <a title=\"quatangtraotay.com.vn\" href=\"http://quatangtraotay.com.vn\" target=\"_blank\" rel=\"noopener noreferrer\">quatangtraotay.com.vn</a>.</p>\n<h3>Kỉ niệm của tui</h3>\n<p>Trong dự án đó, có 1 module là thống kê truy cập, module này sẽ hiện ra có bao nhiêu người đã truy cập, bao nhiêu người đang trực tuyến... ở chân website (footer). Hồi đó, do deadline đến nơi mà vẫn chưa xong nên module đó tui dev rất <span style=\"text-decoration: line-through;\">nhanh</span> ẩu (không thì nát ass). Nó sinh ra 1 cái bug là lượt truy cập và lượng trực tuyến sai. Nhưng mà tui vẫn giao cho khách và khách đồng ý, đơn giản vì con số đó sai nhưng là số ảo và lớn. Cho nên khiến cho khách hàng của <strong>quatangtraotay</strong> nghĩ rằng đang có rất nhiều người sử dụng (cái này gọi là gãi vào chỗ ngứa khách hàng - biến bug thành feature). Đến bây giờ cái bug này vẫn giữ nguyên như vậy, không sửa chữa gì cả, vì tui đã nghỉ làm ở công ty này rồi (ở nhà cho con bú).</p>\n<blockquote>Kẻ lười luôn tìm cách để giải quyết mọi việc một cách hiệu quả nhất</blockquote>\n<h4>Thú tội</h4>\n<p>Nếu bạn nghĩ tui đang ca ngợi những kẻ lười thì bạn đã quá ATSM rồi. Thật ra mà nói, kể cho các bạn nghe về quatangtraotay là 1 cách để tui thú tội. </p>\n<p>Cuộc đời này đã quá khó khăn rồi, đừng làm cho nó thêm khó sống. Bạn biết không, chỉ vì muốn tiết kiệm vài giờ làm việc, hay đơn giản vì bạn thấy nó không quan trọng mà đôi khi, người đến sau sẽ phải mất cả tuần dài để giải quyết đống hỗn loạn mà bạn để lại. Chuyện đó xảy ra khi mà vào một ngày đầy nắng, Mars Group muốn nâng cấp website. Thế là kẻ đến sau xuất hiện (ơn giời cậu đây rồi), rồi đây cuộc đời sẽ bế tắc hay nở hoa? Tui đoán là ít nhất không bế tắc thì cũng đắng lòng. Vì sao ư, họ sẽ fix lại cái bug thống kê truy cập, nhưng khi fix xong thì Mars Group không chấp nhận, vì số lượng truy cập sau khi fix bị giảm đi (do của tui làm là số ảo mà)... và rồi, sự thương lượng, những ngày dài thu thập feedback lại diễn ra... </p>\n<p>Cái tính lười này, bạn nhất định phải diệt nó tận gốc. Để trong suy nghĩ thì nó làm hư suy nghĩ, đặt trong công việc thì nó làm mất đi uy tín, và hàng ngàn cái hậu quả khác. Bạn nghĩ sao, nếu bạn tham gia phát triển driver cho máy thở oxy trong bệnh viện? Liệu cái tính lười đó có giúp máy oxy của bạn cứu người hay đang thở thì sinh bug (ặc ặc).</p>\n<p>Đừng bao giờ suy nghĩ, cái chương trình chứa bug của bạn sẽ cứu thế giới khi AI lên nắm quyền. Vì theo tui nghề nào cũng có đạo đức của nghề đó. Nghề y có y đức, thì coder có \"code đức\". Bạn không thể giỏi lên nếu mãi lười như vậy. Nếu không chạy kịp deadline thì xin thêm vài ngày. Nếu không sửa được bug thì tìm người giúp đỡ. Nếu muốn hết lười thì phải lấy đức làm đầu.</p>\n<p>Từng dòng code bạn viết ra, chính là con người của bạn. Hãy chăm chút cho nó, hoàn thiện nó. Một ngày không xa, rồi bạn sẽ được 1 slot tham gia team <strong><em>cứu thế giới</em></strong> mà thôi.</p>\n<h3>Còn gì nữa?</h3>\n<p>Nếu bạn có kỉ niệm nào như tui ở trên thì chia sẻ cho anh em nhé. Hãy thú tội và sửa lỗi - đó mới là anh hùng thật sự, bằng không bạn chỉ là 1 kẻ lười không hơn không kém.</p>",
            "image": "http://dp0613.tk/media/posts/2/22366842_1655193484520203_305659586336407437_n-lg.jpg",
            "author": {
                "name": "dp0613"
            },
            "tags": [
                   "Lung tung"
            ],
            "date_published": "2018-09-09T17:03:22+07:00",
            "date_modified": "2018-09-09T17:03:22+07:00"
        },
        {
            "id": "http://dp0613.tk/javascript-object-ban-da-gan-bien-dung-chua/",
            "url": "http://dp0613.tk/javascript-object-ban-da-gan-bien-dung-chua/",
            "title": "Javascript Object - Bạn đã gán biến đúng chưa?",
            "summary": "Khi làm việc với JS ai cũng phải ít nhất 1 lần chạm tới object. Bên dưới tui khai báo một object như sau: var myObject = { 'first_key': 'first&hellip;",
            "content_html": "<p>Khi làm việc với JS ai cũng phải ít nhất 1 lần chạm tới object. Bên dưới tui khai báo một object như sau:</p>\n<pre><code class=\"language-javascript\">\n  var myObject = {\n  \t'first_key': 'first value',\n    'second_key': 'second value',\n    'third_key': 'third value',\n  };</code></pre>\n<h3>Khi một object bằng 1 object khác</h3>\n<p>Ví dụ tui có 1 object có tên là Hoa quả. Object Hoa quả này hiện chưa có gì cả. Lại có 1 object khác có tên là Chuối. Tui muốn Hoa quả sẽ nhận tất cả các phần tử của Chuối làm con. Như vậy ta có code như sau:</p>\n<pre><code class=\"language-javascript\">\nvar fruits = [];\nvar bananas = [\n\t{\n  \t\t'name': 'Vietnamese Bananas',\n  \t\t'size': '18cm'\n  \t},\n  \t{\n  \t\t'name': 'African Bananas',\n  \t\t'size': '25cm'\n  \t},\n  \t{\n  \t\t'name': 'American Bananas',\n  \t\t'size': '23cm'\n  \t}\n];\n\nfruits = bananas;\n</code></pre>\n<p> Và kết quả như sau:</p>\n<figure class=\"post__image--center\"><img src=\"http://devwebwithme.tk/media/posts/14/Untitled.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"http://devwebwithme.tk/media/posts/14/responsive/Untitled-xs.png 300w, http://devwebwithme.tk/media/posts/14/responsive/Untitled-sm.png 480w, http://devwebwithme.tk/media/posts/14/responsive/Untitled-md.png 768w\" alt=\"\" width=\"410\" height=\"82\"></figure>\n<p>Bây giờ chúng ta thử thay đổi object Chuối:</p>\n<pre><code class=\"language-javascript\">\nbananas[0]['name'] = \"Another banana\"; //Empty bananas\nconsole.log('fruits', fruits);\n</code></pre>\n<p> Kết quả như sau:</p>\n<figure class=\"post__image--center\"><img src=\"http://devwebwithme.tk/media/posts/14/1.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"http://devwebwithme.tk/media/posts/14/responsive/1-xs.png 300w, http://devwebwithme.tk/media/posts/14/responsive/1-sm.png 480w, http://devwebwithme.tk/media/posts/14/responsive/1-md.png 768w\" alt=\"\" width=\"380\" height=\"81\"></figure>\n<p>Lúc này object Hoa quả đã thay đổi. Mặc dù tui chưa đụng chạm gì tới nó cả. Đây chính là một lỗi mà hay gặp khi muốn dùng object Hoa quả để cache. Rõ ràng khi dùng với mục đích này, bạn muốn dữ liệu được lưu lại vào object Hoa quả, sợ bị thay đổi trong quá trình tính toán. Vậy mà ... </p>\n<h3>Bạn đã làm sai ngay từ đầu</h3>\n<p>Nhìn lại dòng code này </p>\n<pre><code class=\"language-javascript\">fruits = bananas;</code></pre>\n<p>Dòng code tưởng chừng ai cũng hiểu này chính là cái sai ngay từ đầu của bạn. Để hiểu đúng nó, bạn phải hiểu được <a title=\"Javascript Object - Thừa kế và kế thừa\" href=\"http://devwebwithme.tk/huong-dan/javascript-object-thua-ke-va-ke-thua\">inherit trong JS</a>. Nó không đơn giản là gán <code>fruits</code> bằng <code>bananas</code> mà là nói với trình duyệt rằng <code>fruits</code> sẽ đồng bệnh tương lân với <code>bananas</code> cho dù có bao nhiêu sóng gió xảy ra, chúng vẫn giống nhau. ::SML::</p>\n<h3>Và cách làm đúng</h3>\n<p>Nhiêu đó đủ sến súa rồi, giờ vào vấn đề chính nhé, nãy giờ chỉ là mở bài thôi. Xét đoạn code bên dưới:</p>\n<pre><code class=\"language-javascript\">var fruits = [];\nvar bananas = [\n\t{\n  \t\t'name': 'Vietnamese Bananas',\n  \t\t'size': '18cm'\n  \t},\n  \t{\n  \t\t'name': 'African Bananas',\n  \t\t'size': '25cm'\n  \t},\n  \t{\n  \t\t'name': 'American Bananas',\n  \t\t'size': '23cm'\n  \t}\n];\n\nfruits = JSON.parse(JSON.stringify(bananas));\n\nconsole.log('fruits', fruits);</code></pre>\n<p> Và kết quả như sau:</p>\n<figure class=\"post__image--center\"><img src=\"http://devwebwithme.tk/media/posts/14/3.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"http://devwebwithme.tk/media/posts/14/responsive/3-xs.png 300w, http://devwebwithme.tk/media/posts/14/responsive/3-sm.png 480w, http://devwebwithme.tk/media/posts/14/responsive/3-md.png 768w\" alt=\"\" width=\"394\" height=\"68\"></figure>\n<p> Thử thay đổi object Chuối như sau:</p>\n<pre><code class=\"language-javascript\">\nbananas[0]['name'] = \"Another banana\"; //Empty bananas\nconsole.log('fruits', fruits);</code></pre>\n<p> Và kết quả:</p>\n<p> </p>\n<figure class=\"post__image--center\"><img src=\"http://devwebwithme.tk/media/posts/14/3.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"http://devwebwithme.tk/media/posts/14/responsive/3-xs.png 300w, http://devwebwithme.tk/media/posts/14/responsive/3-sm.png 480w, http://devwebwithme.tk/media/posts/14/responsive/3-md.png 768w\" alt=\"\" width=\"394\" height=\"68\"></figure>\n<p>Bingo! </p>\n<p>Định nói thêm mà không biết nói gì, nói chung là hết rồi. Muốn bàn luận gì thì cứ tranh thủ nhé.</p>",
            "image": "http://dp0613.tk/media/posts/1/objects-lg.png",
            "author": {
                "name": "dp0613"
            },
            "tags": [
                   "js"
            ],
            "date_published": "2018-09-09T17:01:06+07:00",
            "date_modified": "2018-09-09T17:01:06+07:00"
        }
    ]
}
